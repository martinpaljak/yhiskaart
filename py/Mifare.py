#!/usr/bin/python

#
# Copyright: Collin Mulliner <collin@mulliner.org>
# Web: http://www.mulliner.org/nfc/
#
# License: GPLv2
#

import Utils

class Mifare:
	def __init__(self, raw_data, is_hex = 1):
		self.__raw_data = []
		self.__data_only = []
		if (is_hex == 1):
			self.__raw_data = Utils.hex2bin(raw_data)
		else:
			self.__raw_data = raw_data
		done = 0
		pos = 4
		while done == 0: 
			s = pos * 16
			for i in range(0, 16):
				self.__data_only.append(self.__raw_data[s+i])
			pos = pos + 1
			if pos < 128 and pos % 4 == 3:
				#print "sec trailer"
				pos = pos + 1
			elif pos >= 128 and pos % 8 == 7:
				pos = pos + 1
			if pos * 16 >= len(self.__raw_data):
				#print "end: " + str(pos)
				done = 1
		
	def byteToBlock(self, b):
		block = b / 16
		if b % 16 > 0:
			block = block + 1
		return block
		
	def getSize(self):
		return len(self.__raw_data)
	
	def getDataSize(self):
		return len(self.__data_only)
		
	def getBlock(self, block_number):
		of = block_number * 16
		block = self.__raw_data[of:of+16]
		return block
	
	def getData(self, start = 0, end = -1):
		if end == -1:
			end = len(self.__data_only)
		data = self.__data_only[start:end]
		return data
		
	def setData(self, data):
		self.__data_only = data

	def modData(self, data, offset):
		pass

	def getDataHex(self, start = 0, end = -1):
		if end == -1:
			end = len(self.__data_only)
		data = self.__data_only[start:end]
		d = Utils.bin2hex(data)
		return d

if __name__ == "__main__":
	import NFCTagType1
	import NDEFMessage
	import SpReader
	data

	mf1 = Mifare(data)
	print "Total Size: " + str(mf1.getSize())
	print mf1.getBlock(3)
	d = mf1.getData()
	print mf1.getDataSize()
	print mf1.getDataHex()
	nt = NFCTagType1.NFCTagType1()
	nt.fromRawData(d, 0)
	n = nt.getNDEF()
	sp = SpReader.SpReader(n, 0)
